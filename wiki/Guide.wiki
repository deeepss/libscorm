#summary How to use LibSCORM 2.7
#labels Featured

= 1.1 Starting from Scratch =

Every SCO requires the files LMS.js and LibScormException.js; these
files suffice to connect to SCORM.

Hello, world! (Actually, hello <learner name>)

{{{
<html>
<head>
	<script language="JavaScript" type="text/javascript"
		src="LibScormException.js"> </script>
	<script language="JavaScript"
		type="text/javascript" src="LMS.js"> </script>
	<script language="JavaScript" type="text/javascript">
	var lms = null;

	function load() {
		try {
			lms = new LMS(window);
			document.getElementById("message").innerHTML =
				"Hello, " + lms.GetValue("cmi.learner_name");
		} catch(e) {
			alert(e.toString());
		}
	} function unload() {
		if(lms) lms.Terminate();
	}
	</script>
</head>
<body onload='load()' onunload='unload()'>
	<p id="message">Not connected to LMS</p>
</body>
</html>
}}}

= 1.2 LMS Class Methods =

Constructor(window)
	Scans window's parents for SCORM API.
Terminate()
	Ensure your SCO calls this method before exit.
IsTerminated()
	Boolean.
GetValue(name), 
SetValue(name, value)
	'name' is an element of the CMI data model. 
Commit()
	Alerts the LMS that the data sent by SetValues should be
	committed to persistent storage. Some LMSes use this as a cue
	to update the course table of contents or other sequencing
	interface elements.
StartSessionTimer(), 
PauseSessionTimer(), 
RecordSessionTime()
	Writes the value of the Session Timer stopwatch to
	cmi.session_time.
GetLastError()
	Returns SCORM error code of last error, or 0.
	Discouraged. Rely on exception handling in JavaScript
	SCOs. This method is included only for Flash SCOs (which
	can't catch exceptions).
GetDiagnostic()
	Returns explanation for last error. Discouraged. 
GetErrorString()
	Discouraged.

= 1.3 Objectives and Interactions =

They are both instances of "CMI Bags" -- CMI collections with no specified
order, and are manipulated similarly in LibSCORM. The library caches bag
values, so repeated access will not result in slow duplicate LMS calls.

Setting objective score and success status

{{{
<html>
<head>
	<script language="JavaScript" type="text/javascript"
		src="LibScormException.js"> </script>
	<script language="JavaScript"
		type="text/javascript" src="LMS.js"> </script>
	<script language="JavaScript"
		type="text/javascript" src="CMIBag.js"> </script>
	<script language="JavaScript" type="text/javascript">
	var lms = null;
	var obj = null;

	function load() {
		try {
			lms = new LMS(window);
			obj = new CMIBag(lms, "objectives");
		} catch(e) {
			alert(e.toString());
		}
	} function unload() {
		if(lms) {
			// Set primary objective
			lms.SetValue('cmi.score.scaled', '1');
			lms.SetValue('cmi.success_status', 'passed');
			// Set secondary
			obj.SetValue('secondary_name', 
			               'success_status', 'failed');
			obj.SetValue('secondary_name', 
			               'score.scaled', '0.25');
			lms.Terminate();
		}
	}
	</script>
</head>
<body onload='load()' onunload='unload()'>
	<p>This SCO is successful but secondary objective
	   'secondary_name' is not.
	</p>
</body>
</html>
}}}